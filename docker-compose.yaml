services:
  api:
    build: ./api
    container_name: facefinder_api
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./api:/app
    restart: unless-stopped
    environment:
      - SESSION_EXPIRE_MINUTES=240
      - DATABASE_POSTGRES_URL=postgres://postgres:password@postgres:5432/facefinder
      - DATABASE_REDIS_URL=redis://redis:6379/0
  
  celery:
    build: ./api
    container_name: facefinder_celery
    command: celery -A app.celery_worker.celery_app worker --loglevel=info
    volumes:
      - ./api:/app
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    environment:
      - SESSION_EXPIRE_MINUTES=240
      - DATABASE_POSTGRES_URL=postgres://postgres:password@postgres:5432/facefinder
      - DATABASE_REDIS_URL=redis://redis:6379/0

  client:
    build: ./client
    container_name: facefinder_client
    ports:
      - "8080:80"
    depends_on:
      - api
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: facefinder_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: facefinder
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
  
  redis:
    image: redis:latest
    container_name: facefinder_redis
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  postgres_data: